# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ssv
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: ssv
#   template:
#     metadata:
#       labels:
#         app: ssv
#     spec:
#       containers:
#       - name: app
#         image: new-django
#         command: ["/bin/sh", "-c"]
#         args: ["python manage.py runserver 0.0.0.0:8000"]
#         imagePullPolicy: IfNotPresent


# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ssv-service
#   labels:
#     app: ssv
# spec:
#   selector:
#     app: ssv
#   type: NodePort
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 8000  # Ensure this matches the port your app is listening on



apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-sample-deployment
  namespace: default  # Replace if using a different namespace
  labels:
    app: django-sample
spec:
  replicas: 1  # You can adjust replicas as needed
  selector:
    matchLabels:
      app: django-sample
  template:
    metadata:
      labels:
        app: django-sample
    spec:
      containers:
      - name: django-sample-container
        image: 637423378523.dkr.ecr.ap-south-1.amazonaws.com/django/sample:latest # Your ECR image
        ports:
        - containerPort: 8000  # Django runs on port 8000
        env:
        - name: DEBUG
          value: "False"
        - name: SECRET_KEY
          value: "your-secret-key"  # Replace with your Django SECRET_KEY
        command: ["/bin/sh", "-c"]
        args: ["python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
        imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: django-sample-service
  namespace: default  # Replace if using a different namespace
spec:
  type: NodePort  # Set to NodePort for external access
  selector:   
    app: django-sample
  ports:
    - protocol: TCP
      port: 80  # External access port
      targetPort: 8000  # Django app's internal port
      nodePort: 30000  # Optional: specify a node port, or let Kubernetes assign one
