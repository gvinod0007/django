# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ssv
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: ssv
#   template:
#     metadata:
#       labels:
#         app: ssv
#     spec:
#       containers:
#       - name: app
#         image: new-django
#         command: ["/bin/sh", "-c"]
#         args: ["python manage.py runserver 0.0.0.0:8000"]
#         imagePullPolicy: IfNotPresent


# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ssv-service
#   labels:
#     app: ssv
# spec:
#   selector:
#     app: ssv
#   type: NodePort
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 8000  # Ensure this matches the port your app is listening on



apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-sample-deployment
  labels:
    app: django-sample
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-sample
  template:
    metadata:
      labels:
        app: django-sample
    spec:
      containers:
      - name: django-sample-container
        image: 637423378523.dkr.ecr.ap-south-1.amazonaws.com/django/sample:latest  # Replace with your ECR image
        ports:
        - containerPort: 8000
        env:
        - name: DJANGO_ENV
          value: "production"  # Set your environment to production
        - name: DEBUG
          value: "False"  # Disable debug mode in production
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret 
              key: secret_key  
        command: ["/bin/sh", "-c"]  # Optional for debugging
        args: ["python manage.py runserver 0.0.0.0:8000"]  # Command to start your Django app

---
apiVersion: v1
kind: Service
metadata:
  name: django-sample-service
  labels:
    app: django-sample
spec:
  selector:
    app: django-sample  # Ensure this matches the deployment's labels
  ports:
    - protocol: TCP
      port: 80  # External port to access the service
      targetPort: 8000  # Port your app listens on
  type: NodePort  # This allows external access to your service
